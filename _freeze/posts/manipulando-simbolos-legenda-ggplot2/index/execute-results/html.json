{
  "hash": "0d0ec59809e5015c53a0236d7edcacd0",
  "result": {
    "markdown": "---\ntitle: \"Manipulando os símbolos na legenda do ggplot2\"\ndescription: \"Solução para vários layers diferentes\"\nauthor: \"Bruno Pinheiro de Oliveira\"\ndate: \"5/22/2021\"\nrender: html\nformat:\n  html:\n    toc: true\ncategories:\n  - ggplot2\n  - dataviz\n---\n\n\nO pacote ggplot2 é provavelmente o mais utilizado para visualização de dados no R. É um pacote muito robusto e com inúmeras possibilidades tanto gráficas como estéticas. Por meio de suas funções é possível plotar dados de forma muito simples. Algumas vezes, no entando, as definições padrões do ggplot não atendem necessidades específicas e então, no meio de tantas opções, as coisas podem ficar um tanto confusas.\n\n| Função | Lógica             | Detalhe         |\n|--------|--------------------|-----------------|\n| sum(x) | $\\sum_{i=1}^{k} x$ | Soma de vetores |\n\nMuitas vezes, por exemplo, é necessário manipular os símbolos das legendas dos gráficos para garantir maior qualidade e objetividade visual. Não é algo complicado, mas já gastei um bom tempo pesquisando a respeito até conseguir descobrir uma forma eficiente de fazê-lo (o que só ocorreu realmente porque, para me ajudar, decidi ajudar um camarada no StackOverFlow).\n\nAqui neste tutorial vou explicar como realizar esta tarefa.\n\n## Criar os dados\n\nComecemos criando um conjunto de dados que possa expressar o problema.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <-\n  data.frame(ano = rep(2000:2018, each=2),\n             dolar = sort(rnorm(1:38, 3, .6)),\n             tipo = c(\"comercial\", \"turístico\"))\n\nstr(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t38 obs. of  3 variables:\n $ ano  : int  2000 2000 2001 2001 2002 2002 2003 2003 2004 2004 ...\n $ dolar: num  1.63 2.08 2.3 2.49 2.64 ...\n $ tipo : chr  \"comercial\" \"turístico\" \"comercial\" \"turístico\" ...\n```\n:::\n:::\n\n\n## Criar o gráfico\n\nAgora vamos plotar um gráfico com a série temporal em linha e um ponto correspondente a um valor do ano de 2006.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\np1 <- ggplot(df) +\n  geom_line(aes(x = ano, y = dolar, colour = tipo)) +\n  geom_point(aes(x = 2006, y = 3.6, colour = \"Valor máximo\"))\n\np1\n```\n\n::: {.cell-output-display}\n![Plot com a legenda incorreta](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nJá temos um gráfico bastante interessante, porém as legendas não estão adequadamente formatadas, de modo que tanto as linhas estão cortadas por um círculo como o ponto está cortado por uma linha. Queremos adequar os símbolos para que as linhas sejam representadas por linhas e o ponto apenas por um ponto.\n\n## Ajustar a legenda\n\nPara conseguir a manipulação que desejamos, é preciso adicionar algumas especificações utilizando a função guides(), conforme indicado abaixo. Dentro dele indicamos o argumento color, e sobrescrevemos o mapeamento estético dos símbolos dentro de guide_legend(), passando os valores que definem o tipo de ponto pch e de linha linetype dentro de uma lista.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 +\n  guides(color = guide_legend(\n    override.aes = list(pch=c(NA, NA, 16), linetype=c(1,1,0))\n))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nPronto, agora sim! O resultado é o gráfico que queríamos, com os símbolos da legenda corretamente formatados.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}